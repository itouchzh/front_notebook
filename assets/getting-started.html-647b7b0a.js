import{_ as e,o as a,c as r,e as i}from"./app-38101b12.js";const n={},s=i(`<h1 id="terramoursapi-v0-1-deployment" tabindex="-1"><a class="header-anchor" href="#terramoursapi-v0-1-deployment" aria-hidden="true">#</a> TerraMoursApi-V0.1 Deployment</h1><h2 id="_1-create-the-server-project-folder" tabindex="-1"><a class="header-anchor" href="#_1-create-the-server-project-folder" aria-hidden="true">#</a> 1. Create the Server Project Folder</h2><p>Create a project folder to manage the backend interface code:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/data/terramours/api
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Assign permissions to the folder:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>cd /data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>chmod -R 777 terramours
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-publish-the-project" tabindex="-1"><a class="header-anchor" href="#_2-publish-the-project" aria-hidden="true">#</a> 2. Publish the Project</h2><p>Right-click on the project node, select Publish, and choose to publish to a folder:</p><p><img src="https://www.raokun.top/upload/2023/05/image-20230524153537256.png" alt="image-20230524153537256"></p><p>Select the appropriate runtime environment, and choose the Linux-64 server to publish:</p><p><img src="https://www.raokun.top/upload/2023/05/image-20230524153736263.png" alt="image-20230524153736263"></p><p>Publish the Dockerfile (or create it in the <code>publish</code> folder on the server):</p><p><img src="https://www.raokun.top/upload/2023/05/image-20230524155959756.png" alt="image-20230524155959756"></p><p>Dockerfile content:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/aspnet:7.0 AS base
WORKDIR /app
EXPOSE 80

FROM base AS final
WORKDIR /app
COPY .  /app
ENTRYPOINT [\\u0022dotnet\\u0022, \\u0022TerraMours.dll\\u0022]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-package-and-compress-the-code" tabindex="-1"><a class="header-anchor" href="#_3-package-and-compress-the-code" aria-hidden="true">#</a> 3. Package and Compress the Code</h2><p>After successful publication, click \\u0022Open Folder,\\u0022 select the parent directory, package the entire <code>publish</code> folder, and compress it into a zip file for uploading to the server.</p><p>Zip format:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>publish{“date time”}.zip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://www.raokun.top/upload/2023/05/image-20230524154015606.png" alt="image-20230524154015606"></p><h2 id="_4-upload-to-the-server" tabindex="-1"><a class="header-anchor" href="#_4-upload-to-the-server" aria-hidden="true">#</a> 4. Upload to the Server</h2><p>The project path is:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/data/terramours/api
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Upload the compressed file to the designated folder on the server. XFTP is recommended for visual operation.</p><p><img src="https://www.raokun.top/upload/2023/05/image-20230524154252126.png" alt="image-20230524154252126"></p><h2 id="_5-unzip-the-files" tabindex="-1"><a class="header-anchor" href="#_5-unzip-the-files" aria-hidden="true">#</a> 5. Unzip the Files</h2><p>Run the unzip command in the project folder:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>cd /data/terramours/api
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>unzip publish0521.zip -- change the zip file name. If replacing, enter \\u0027A\\u0027 to overwrite all
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_6-create-a-new-script-file-terramours-sh" tabindex="-1"><a class="header-anchor" href="#_6-create-a-new-script-file-terramours-sh" aria-hidden="true">#</a> 6. Create a New Script File: <code>terramours.sh</code></h2><p>Create a new script file for easy command execution:</p><p>Filename: <code>terramours.sh</code></p><p>Content:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#!/bin/bash
cd publish
echo \\u0022Stopping docker container...\\u0022
docker stop terramours
echo \\u0022Removing docker container...\\u0022
docker rm terramours
echo \\u0022Removing docker image...\\u0022
docker rmi terramours
echo \\u0022Building docker image...\\u0022
docker build -t terramours .
echo \\u0022Running docker container...\\u0022
docker run --name terramours -p 4112:80 -d terramours

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-run-the-script-terramours-sh" tabindex="-1"><a class="header-anchor" href="#_7-run-the-script-terramours-sh" aria-hidden="true">#</a> 7. Run the Script: <code>terramours.sh</code></h2><p>Execute the script:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sh terramours.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The backend project has been deployed to Docker, and the project port is 4112.</p><h2 id="_8-view-portainer-u0027s-container-management" tabindex="-1"><a class="header-anchor" href="#_8-view-portainer-u0027s-container-management" aria-hidden="true">#</a> 8. View Portainer\\u0027s Container Management:</h2><p>Check the containers, and the deployment is successful:</p><p><img src="https://www.raokun.top/upload/2023/05/image-20230524155253942.png" alt="image-20230524155253942"></p>`,42),d=[s];function t(o,c){return a(),r("div",null,d)}const u=e(n,[["render",t],["__file","getting-started.html.vue"]]);export{u as default};
